program = _{ SOI ~ declarations ~ EOI }

declarations =  { declaration* }
declaration  = _{ let_decl | type_decl }
let_decl     =  { "let" ~ pattern ~ "=" ~ term }
type_decl    =  { "let" ~ "type" ~ ident ~ "=" ~ type }

type         =  { primary_type ~ (type_infix ~ primary_type)* }
type_infix   = _{ type_arrow }
type_arrow   =  { "->" }
primary_type = _{ list_type | record_type | tuple_type | variant_type | ident }
list_type    =  { "[" ~ type ~ "]" }
record_type  =  { "{" ~ field_types? ~ "}" }
field_types  = _{ field_type ~ ("," ~ field_type)* }
field_type   =  { ident ~ ":" ~ type }
tuple_type   =  { "(" ~ types? ~ ")" }
types        = _{ type ~ ("," ~ type)* }
variant_type =  { "<" ~ field_types? ~ ">" }

term       = _{ abs_term | fix_term | if_term | let_term | match_term | expr_term }
abs_term   =  { pattern ~ ":" ~ type ~ "=>" ~ term }
fix_term   =  { "fix" ~ term }
if_term    =  { "if" ~ term ~ "then" ~ term ~ "else" ~ term }
let_term   =  { "let" ~ pattern ~ "=" ~ term ~ "in" ~ term }
match_term =  { "match" ~ term ~ "with" ~ match_arms }
match_arms = _{ match_arm ~ ("," ~ match_arm)* }
match_arm  =  { "<" ~ ident ~ "=" ~ pattern ~ ">" ~ "=>" ~ term }

expr_term = { prefix? ~ app_term ~ postfix? ~ (infix ~ prefix? ~ app_term ~ postfix?)* }

infix = _{ or_op | and_op | eq_op | ne_op | ge_op | gt_op | le_op | lt_op | add_op | sub_op | mul_op | div_op | rem_op | pow_op }

or_op  = { "||" }
and_op = { "&&" }
eq_op  = { "==" }
ne_op  = { "!=" }
ge_op  = { ">=" }
gt_op  = { ">" }
le_op  = { "<=" }
lt_op  = { "<" }
add_op = { "+" }
sub_op = { "-" }
mul_op = { "*" }
div_op = { "/" }
rem_op = { "%" }
pow_op = { "**" }

postfix = _{ as }

as = { "as" ~ type }

prefix = _{ neg_op | not_op }

neg_op = { "-" }
not_op = { "!" }

app_term     =  { proj_term+ }
proj_term    =  { primary_term ~ proj_field* }
proj_field   = _{ "." ~ (ident | nat) }
primary_term = _{ list_term | record_term | tuple_term | variant_term | ident | nat }
list_term    =  { "[" ~ terms? ~ "]" }
terms        = _{ term ~ ("," ~ term)* }
record_term  =  { "{" ~ field_terms? ~ "}" }
field_terms  = _{ field_term ~ ("," ~ field_term)* }
field_term   =  { ident ~ "=" ~ term }
tuple_term   =  { "(" ~ terms? ~ ")" }
variant_term =  { "<" ~ ident ~ "=" ~ term ~ ">" }

pattern    = _{ record_pat | tuple_pat | wild_pat | ident }
record_pat =  { "{" ~ field_pats ~ "}" }
field_pats = _{ field_pat ~ ("," ~ field_pat)* }
field_pat  =  { ident ~ ("=" ~ pattern)? }
tuple_pat  =  { "(" ~ patterns? ~ ")" }
patterns   = _{ pattern ~ ("," ~ pattern)* }
wild_pat   =  { "_" }

ident   = @{ keyword? ~ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_" | "'")* }
keyword =  { "_" | "as" | "else" | "fix" | "fn" | "if" | "in" | "let" | "match" | "then" | "with" }

nat = @{ ASCII_DIGIT+ }

COMMENT    = _{ "--" ~ (!NEWLINE ~ ANY)* }
WHITESPACE = _{ WHITE_SPACE }
